name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libglfw3-dev libglew-dev libosmesa6-dev xvfb ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        make install
    
    - name: Lint code
      run: make lint
    
    - name: Format check with black
      run: |
        black --check src/
    
    - name: Import sort check with isort
      run: |
        isort --check-only src/
    
    - name: Type check with mypy
      run: make typecheck
    
    - name: Run tests
      run: |
        export CI=true
        export DISPLAY=:99
        xvfb-run -a make test
    
    - name: Generate simulation GIF
      run: |
        export CI=true
        export DISPLAY=:99
        xvfb-run -a make generate-gif
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: simulation-outputs-python-${{ matrix.python-version }}
        path: |
          media/
          results/
        retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: |
        pip install twine
        twine check dist/*